---
 - hosts: AWX
   become: yes
   become_user: "{{ username }}"
   tasks:
    - name: Login in
      command: chdir=/home/openshift ./oc login api.{{ openshift_url }}:6443 -u admin -p {{ password1 }} --insecure-skip-tls-verify=true

    - name: Create Project
      shell: chdir=/home/openshift ./oc create namespace {{ namespace }}
      
    - name: Copy certificate-script Script
      template:
        src: ./templates/selfsign-certificate-script.js
        dest: /home/openshift/selfsign-certificate-script.sh
 
    - name: Make script executable
      shell: chdir=/home/openshift chmod +x selfsign-certificate-script.sh

    - name: Run certificates script
      shell: chdir=/home/openshift ./selfsign-certificate-script.sh
      
    - name: Create secret
      shell: chdir=/home/openshift ./oc create secret tls entando-tls-secret --key="{{ appname }}.apps.{{ openshift_url }}-server-key.pem" --cert="{{ appname }}.apps.{{ openshift_url }}-server-cert.pem" -n {{ namespace }}
    
    - name: Create ca secret
      shell: chdir=/home/openshift ./oc create secret generic entando-ca-cert-secret --from-file="{{ appname }}.apps.{{ openshift_url }}-ca-cert.pem" -n {{ namespace }}
    
    - name: Remove certificates from host
      shell: chdir=/home/openshift rm  {{ appname }}.apps.{{ openshift_url }}*.pem

    - name: Create mysql-secrets
      shell: |
        chdir=/home/openshift ./oc create secret generic mysql-secret --from-literal username=automation --from-literal password=myP4ssw0rd -n {{ namespace }}
        chdir=/home/openshift ./oc create secret generic oracle-secret --from-literal username=automation --from-literal password=myP4ssw0rd -n {{ namespace }}
        chdir=/home/openshift ./oc create secret generic postgres-secret --from-literal username=automation --from-literal password=myP4ssw0rd -n {{ namespace }}
        chdir=/home/openshift ./oc create secret generic default-sso-in-namespace-db-secret --from-literal username=automationsso --from-literal password=myP4ssw0rd -n {{ namespace }}
        chdir=/home/openshift ./oc create secret generic {{appname}}-portdb-{{ dbmode }} --from-literal username=automationport --from-literal password=myP4ssw0rd -n {{ namespace }}
        chdir=/home/openshift ./oc create secret generic {{appname}}-servdb-{{ dbmode }} --from-literal username=automationserv --from-literal password=myP4ssw0rd -n {{ namespace }}
        chdir=/home/openshift ./oc create secret generic {{appname}}-dedb-{{ dbmode }} --from-literal username=automationecr --from-literal password=myP4ssw0rd -n {{ namespace }}

    - name: Copy operator-config
      template:
        src: ./templates/{{operatorconfig}}.j2
        dest: /home/openshift/{{operatorconfig}}.yaml

    - name: Install operatorscript on namespace scope
      shell: chdir=/home/openshift ./oc apply -f {{operatorconfig}}.yaml -n {{ namespace }}      

    - name: Copy Operator Script
      template:
        src: ./templates/entando-subscription.j2
        dest: /home/openshift/entando-subscription.yaml

    - name: Install operatorscript on namespace scope
      shell: chdir=/home/openshift ./oc apply -f entando-subscription.yaml -n {{ namespace }}

    - name: Sleep for 400 seconds and continue with play
      wait_for:
        timeout: 100

    - name: Scale down Operator deployment
      shell: chdir=/home/{{ username }} ./oc scale deployment entando-operator -n {{ namespace }} --replicas=0
      
    - name: Build operator deployment with latest images
      shell: chdir=/home/{{ username }} ./oc get clusterserviceversion -n {{ namespace }} -o yaml > entando-operator-openshift.yaml
      
    - name: Retrive clientsecret
      shell: chdir=/home/{{ username }} sed "s/entando-component-manager@.*/entando-component-manager@{{ SHAENTANDOCOMPONENTMANAGER }}/g" entando-operator-openshift.yaml > entando-operator-opensift-modified.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-de-app-wildfly@.*/entando-de-app-wildfly@{{ SHAENTANDODEAPPWILDFLY }}/g" entando-operator-opensift-modified.yaml > entando-operator-opensift-modified1.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-de-app-eap@.*/entando-de-app-eap@{{ SHAENTANDODEAPPEAP }}/g" entando-operator-opensift-modified1.yaml > entando-operator-opensift-modified2.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-k8s-app-controller@.*/entando-k8s-app-controller@{{ SHAENTANDOAPPCONTROLLER }}/g" entando-operator-opensift-modified2.yaml > entando-operator-opensift-modified3.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-k8s-plugin-controller@.*/entando-k8s-plugin-controller@{{ SHAENTANDOPLUGINCONTROLLER }}/g" entando-operator-opensift-modified3.yaml > entando-operator-opensift-modified4.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-k8s-dbjob@.*/entando-k8s-dbjob@{{ SHAENTANDODBJOB }}/g" entando-operator-opensift-modified4.yaml > entando-operator-opensift-modified5.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-k8s-keycloak-controller@.*/entando-k8s-keycloak-controller@{{ SHAENTANDOKKCONTROLLER }}/g" entando-operator-opensift-modified5.yaml > entando-operator-opensift-modified6.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-k8s-database-service-controller@.*/entando-k8s-database-service-controller@{{ SHAENTANDODBSVCCONTROLLER }}/g" entando-operator-opensift-modified6.yaml > entando-operator-opensift-modified7.yaml
    - name: Retrive clientsecret
      shell: chdir=/home/{{ username }} sed "s/entando-k8s-app-plugin-link-controller@.*/entando-k8s-app-plugin-link-controller@{{ SHAENTANDOAPPPLUGINCONTROLLER }}/g" entando-operator-opensift-modified.yaml > entando-operator-opensift-modified8.yaml
    - name: Retrive clientsecret
      shell: chdir=/home/{{ username }} sed "s/entando-k8s-service@.*/entando-k8s-service@{{ SHAENTANDOSERVICE }}/g" entando-operator-opensift-modified8.yaml > entando-operator-opensift-complete.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-process-driven-plugin@.*/entando-process-driven-plugi@{{ SHAENTANDOPDPLUGIN }}/g" entando-operator-opensift-modified9.yaml > entando-operator-opensift-modified10.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-keycloak@.*/entando-keycloak@{{ SHAENTANDOKK }}/g" entando-operator-opensift-modified10.yaml > entando-operator-opensift-modified11.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/app-builder@.*/app-builder@{{ SHAENTANDOAPPBUILDER }}/g" entando-operator-opensift-modified11.yaml > entando-operator-opensift-modified12.yaml
#    - name: Retrive clientsecret
#      shell: chdir=/home/{{ username }} sed "s/entando-k8s-controller-coordinator@.*/entando-k8s-controller-coordinator@{{ SHAENTANDOCONTROLLERCOORDINATOR }}/g" entando-operator-opensift-modified12.yaml > entando-operator-opensift-complete.yaml

    - name: Apply operator deployment updated
      shell: chdir=/home/{{ username }} ./oc replace -f entando-operator-opensift-complete.yaml -n {{ namespace }}
      
    - name: Scale up operator
      shell: chdir=/home/{{ username }} ./oc scale deployment entando-operator -n {{ namespace }} --replicas=1


    - name: Copy Entando App Script
      template:
        src: ./templates/{{entandoappconfig}}.j2
        dest: /home/openshift/{{entandoappconfig}}.yaml

    - name: Copy dbms external svc
      template:
        src: ./templates/dbms-{{ dbms }}.j2
        dest: /home/openshift/dbms-{{ dbms }}.yaml

    - name: Install dbms svc
      shell: chdir=/home/openshift ./oc apply -f dbms-{{ dbms }}.yaml -n {{ namespace }}

    - name: sleep for 10 seconds and continue with play
      wait_for: timeout=40

    - name: Install Entando App on namespace scope
      shell: chdir=/home/openshift ./oc apply -f {{entandoappconfig}}.yaml -n {{ namespace }}

    - name: Sleep for 400 seconds and continue with play
      wait_for:
        timeout: 400