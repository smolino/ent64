---
 - hosts: AWX
   become: yes
   become_user: "{{ username }}"
   environment:
     - PATH: '{{ lookup(''env'', ''PATH'') }}:/home/{{ username }}/.local/bin/aws'
     - PATH: '{{ lookup(''env'', ''PATH'') }}:/home/{{ username }}/.entando/ent/v7.0.1/cli/v7.0.0/bin'
   tasks:
   
    - name: Collect all Entando application logs with ent
      shell: |
          source /home/{{ username }}/.entando/activate --quiet --force 2>/dev/null
          ent namespace {{ namespace }}
          ent appname {{ appname }}
          ent diag
          
    - name: Create Dir Logs
      shell: mkdir -p /home/{{ username }}/log-collector/{{ appname }}-v{{ source }}/results
      
    - name: Collect all Entando application logs from pods
      shell: kubectl get pods -n {{ namespace }} --no-headers | awk '{print $1}' | while read PODS;do kubectl logs $PODS -n {{ namespace }} > /home/{{ username }}/log-collector/{{ appname }}-v{{ source }}/$PODS.log;done
      
    - name: Copy Ent results
      shell: mv /home/{{ username }}/.entando/reports/* /home/{{ username }}/log-collector/{{ appname }}-v{{ source }}

    - name: Get url
      shell: kubectl get svc -A |grep LoadBalancer | awk '{print $5}' | while read HOST;do 
            echo "http://$HOST.nip.io/app-builder/" > /home/{{ username }}/entando;done            
     
    - name: Curl Entando website
      shell: curl {{ ign }}/app-builder/
      register: webpage
    - debug: var=webpage.stdout
    - name: Fail
      fail:
      when: "'entando' not in webpage.stdout" 
    - name: Success
      debug: msg="Entando App is up and running"

    - name: Print Results
      shell: chdir=/home/{{ username }} touch /home/{{ username }}/log-collector/{{ appname }}-v{{ source }}/{{ webpage }}
      
    - name: Extract Ent results
      shell: chdir=/home/{{ username }}/log-collector/{{ appname }}-v{{ source }}  tar -xvf *.tgz